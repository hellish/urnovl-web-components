import{s as C,g as c}from"./chunk-L4EGOTBX-2Jzo53v8.js";import{i as b,k}from"./entry-preview-BcHUnPw7.js";import{d as w,H as R,c as m,h as u,a as E}from"./index-BJvbtjhH.js";import{f as S,_ as n,n as r,M as V,c as D}from"./class-map-CDMw4-pN.js";import{$ as l,J as $,r as I,i as q,D as G,K as U,b as g}from"./get-7S0C3xNv.js";import{t as p}from"./if-defined-CL77Dv0Z.js";import"./index-BriiHZyV.js";import{F as x,f}from"./form-B80GgqR6.js";import{d as A}from"./default-value-C0GKHYBG.js";import{w as h}from"./watch-ByvFYHv8.js";import"./ur-radio-button-CrnYaD1P.js";l.fn.closest=function(s){if(this.is(s))return this;const e=[];return this.parents().each((t,i)=>{if(l(i).is(s))return e.push(i),!1}),new $(e)};const _=b`:host{display:inline-block}fieldset{border:none;padding:0;margin:0;min-width:0}input{position:absolute;padding:0;opacity:0;pointer-events:none;width:1.25rem;height:1.25rem;margin:0 0 0 .625rem}`;let a=class extends V{constructor(){super(...arguments),this.disabled=!1,this.name="",this.value="",this.defaultValue="",this.required=!1,this.invalid=!1,this.isInitial=!0,this.inputRef=q(),this.formController=new x(this),this.definedController=new G(this,{relatedElements:["mdui-radio"]})}get validity(){return this.inputRef.value.validity}get validationMessage(){return this.inputRef.value.validationMessage}get items(){return l(this).find("mdui-radio").get()}get itemsEnabled(){return l(this).find("mdui-radio:not([disabled])").get()}async onValueChange(){var t;this.isInitial=!1,await this.definedController.whenDefined(),this.emit("input"),this.emit("change"),this.updateItems(),this.updateRadioFocusable(),await this.updateComplete;const e=this.formController.getForm();e&&((t=f.get(e))!=null&&t.has(this))?(this.invalid=!1,f.get(e).delete(this)):this.invalid=!this.inputRef.value.checkValidity()}async onInvalidChange(){await this.definedController.whenDefined(),this.updateItems()}checkValidity(){const e=this.inputRef.value.checkValidity();return e||this.emit("invalid",{bubbles:!1,cancelable:!0,composed:!1}),e}reportValidity(){return this.invalid=!this.inputRef.value.reportValidity(),this.invalid&&(this.emit("invalid",{bubbles:!1,cancelable:!0,composed:!1})||(this.inputRef.value.blur(),this.inputRef.value.focus())),!this.invalid}setCustomValidity(e){this.inputRef.value.setCustomValidity(e),this.invalid=!this.inputRef.value.checkValidity()}render(){return k`<fieldset><input ${U(this.inputRef)} type="radio" class="input" name="${p(this.name)}" value="${p(this.value)}" .checked="${!!this.value}" .required="${this.required}" tabindex="-1" @keydown="${this.onKeyDown}"><slot @click="${this.onClick}" @keydown="${this.onKeyDown}" @slotchange="${this.onSlotChange}" @change="${this.onCheckedChange}"></slot></fieldset>`}updateRadioFocusable(){const e=this.items,t=e.find(i=>i.checked);t?e.forEach(i=>{i.focusable=i===t}):this.itemsEnabled.forEach((i,d)=>{i.focusable=!d})}async onClick(e){await this.definedController.whenDefined();const i=e.target.closest("mdui-radio");!i||i.disabled||(this.value=i.value,await this.updateComplete,i.focus())}async onKeyDown(e){if(!["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," "].includes(e.key))return;e.preventDefault(),await this.definedController.whenDefined();const t=this.itemsEnabled,i=t.find(y=>y.checked)??t[0],d=e.key===" "?0:["ArrowUp","ArrowLeft"].includes(e.key)?-1:1;let o=t.indexOf(i)+d;o<0&&(o=t.length-1),o>t.length-1&&(o=0),this.value=t[o].value,await this.updateComplete,t[o].focus()}async onSlotChange(){await this.definedController.whenDefined(),this.updateItems(),this.updateRadioFocusable()}onCheckedChange(e){e.stopPropagation()}updateItems(){this.items.forEach(e=>{e.checked=e.value===this.value,e.invalid=this.invalid,e.groupDisabled=this.disabled,e.isInitial=this.isInitial})}};a.styles=[S,_];n([r({type:Boolean,reflect:!0,converter:g})],a.prototype,"disabled",void 0);n([r({reflect:!0})],a.prototype,"form",void 0);n([r({reflect:!0})],a.prototype,"name",void 0);n([r({reflect:!0})],a.prototype,"value",void 0);n([A()],a.prototype,"defaultValue",void 0);n([r({type:Boolean,reflect:!0,converter:g})],a.prototype,"required",void 0);n([I()],a.prototype,"invalid",void 0);n([h("value",!0)],a.prototype,"onValueChange",null);n([h("invalid",!0),h("disabled")],a.prototype,"onInvalidChange",null);a=n([D("mdui-radio-group")],a);const F="",M=class extends R{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.valueChanged=m(this,"valueChanged",7),this.errorStateChanged=m(this,"errorStateChanged",7),this.name="default-group",this.value=null,this.required=!1,this.options=[],this.handleSelectionChange=s=>{const e=s.detail.value;this.value!==e&&(this.value=e,this.syncSelection(),console.log(`Radio group '${this.name}' value changed to: ${this.value}`),this.valueChanged.emit({name:this.name,value:this.value}))},this.onSlotChange=s=>{const e=s.target;this.options=e.assignedElements().filter(t=>t.tagName==="UR-RADIO-BUTTON"),this.options.forEach(t=>{t.name=this.name,t.addEventListener("valueSelected",this.handleSelectionChange)}),this.syncSelection()}}async validate(){return this.required&&!this.value?(this.errorStateChanged.emit({name:this.name,error:!0,message:"A selection is required."}),!1):(this.errorStateChanged.emit({name:this.name,error:!1}),!0)}async reset(){this.value=null,this.syncSelection()}syncSelection(){this.options.forEach(s=>{s.checked=s.value===this.value})}render(){return u(E,{key:"3b68c5ab8784c98a2e499ecd851477e79ad0d609"},u("mdui-radio-group",{key:"f3b96dbc17267fc7fb879178c92bf601a4d0a6f5"},u("slot",{key:"7202cf138af5d900bfd178102a7c5c20c8605573",onSlotchange:this.onSlotChange})))}static get style(){return F}};w(M,[1,"ur-radio-group",{name:[1],value:[1025],required:[4],options:[32],validate:[64],reset:[64]}]);const v={schemaVersion:"1.0.0",modules:[{kind:"javascript-module",path:"",declarations:[{kind:"class",name:"UrRadioGroup",tagName:"ur-radio-group",customElement:!0,members:[{kind:"field",name:"name",type:"string",description:"Group name for the radio buttons",default:"'default-group'"},{kind:"field",name:"value",type:"string",description:"The currently selected value",default:"null"},{kind:"field",name:"required",type:"boolean",description:"Whether the group is required",default:"false"}],events:[{kind:"event",name:"valueChanged",description:"Event emitted when the value changes"},{kind:"event",name:"errorStateChanged",description:"Event emitted when validation state changes"}]}],exports:[{kind:"js",name:"UrRadioGroup",declaration:{name:"UrRadioGroup",module:"src/components/ur-radio-group/ur-radio-group.tsx"}},{kind:"custom-element-definition",name:"ur-radio-group",declaration:{name:"UrRadioGroup",module:"src/components/ur-radio-group/ur-radio-group.tsx"}}]}]};C({...c()||{},...v,modules:[...(c()||{}).modules||[],...v.modules]});
