import{r as T,R as a,D as A,d as h,u as f}from"./entry-preview-BcHUnPw7.js";import{e as E,a as g,c as n,d as y,f as R}from"./index-CY6OhWYP.js";/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const C=E(class extends g{constructor(t){if(super(t),t.type!==n.PROPERTY&&t.type!==n.ATTRIBUTE&&t.type!==n.BOOLEAN_ATTRIBUTE)throw Error("The `live` directive is not allowed on child or event bindings");if(!T(t))throw Error("`live` bindings can only contain a single expression")}render(t){return t}update(t,[e]){if(e===a||e===A)return e;const r=t.element,i=t.name;if(t.type===n.PROPERTY){if(e===r[i])return a}else if(t.type===n.BOOLEAN_ATTRIBUTE){if(!!e===r.hasAttribute(i))return a}else if(t.type===n.ATTRIBUTE&&r.getAttribute(i)===e+"")return a;return h(t),e}});function P(t="value"){return(e,r)=>{const i=e.constructor,b=i.prototype.attributeChangedCallback;i.prototype.attributeChangedCallback=function(u,d,c){const s=i.getPropertyOptions(t),p=y(s.attribute)?s.attribute:t;if(u===p){const o=s.converter||f,l=(R(o)?o:(o==null?void 0:o.fromAttribute)??f.fromAttribute)(c,s.type);this[t]!==l&&(this[r]=l)}b.call(this,u,d,c)}}}export{C as F,P as d};
