import{_ as h,n as d,d as u}from"./class-map-CvfWHz58.js";import{D as T,$ as a}from"./get-DCsNyb8P.js";import{w as p}from"./watch-ByvFYHv8.js";const c=new WeakMap,C=g=>{class r extends g{constructor(...o){super(...o),this.scrollBehaviorDefinedController=new T(this,{needDomReady:!0}),this.lastScrollTopThreshold=0,this.lastScrollTopNoThreshold=0,this.isParentLayout=!1,this.onListeningScroll=this.onListeningScroll.bind(this)}get scrollPaddingPosition(){throw new Error("Must implement scrollPaddingPosition getter")}async onScrollTargetChange(o,t){const e=this.hasUpdated;if(await this.scrollBehaviorDefinedController.whenDefined(),e&&(this.setContainerPadding("remove",o),this.setContainerPadding("add",t)),!this.scrollBehavior)return;const l=this.getListening(o);l&&l.removeEventListener("scroll",this.onListeningScroll);const i=this.getListening(t);i&&(this.updateScrollTop(i),i.addEventListener("scroll",this.onListeningScroll))}async onScrollBehaviorChange(){await this.scrollBehaviorDefinedController.whenDefined();const o=this.getListening(this.scrollTarget);o&&(this.scrollBehavior?(this.updateScrollTop(o),o.addEventListener("scroll",this.onListeningScroll)):o.removeEventListener("scroll",this.onListeningScroll))}connectedCallback(){super.connectedCallback(),this.scrollBehaviorDefinedController.whenDefined().then(()=>{this.isParentLayout=u(this.parentElement,"mdui-layout"),this.setContainerPadding("add",this.scrollTarget)})}disconnectedCallback(){super.disconnectedCallback(),this.scrollBehaviorDefinedController.whenDefined().then(()=>{this.setContainerPadding("remove",this.scrollTarget)})}hasScrollBehavior(o){var e;const t=((e=this.scrollBehavior)==null?void 0:e.split(" "))??[];return Array.isArray(o)?!!t.filter(l=>o.includes(l)).length:t.includes(o)}runScrollThreshold(o,t){}runScrollNoThreshold(o,t){}setContainerPadding(o,t){const e=this.getContainer(t);if(!e||this.isParentLayout)return;const l=this.scrollPaddingPosition,i=l==="top"?"paddingTop":"paddingBottom";if(o==="add"||o==="update"){const s=["fixed","absolute"].includes(a(this).css("position"))?this.offsetHeight:null;if(a(e).css({[i]:s}),o==="add"&&s!==null){const n=c.get(e)??{top:[],bottom:[]};n[l].push(this),c.set(e,n)}}if(o==="remove"){const s=c.get(e);if(!s)return;const n=s[l].indexOf(this);n>-1&&(s[l].splice(n,1),c.set(e,s)),s[l].length||a(e).css({[i]:null})}}onListeningScroll(){const o=this.getListening(this.scrollTarget);window.requestAnimationFrame(()=>this.onScroll(o))}onScroll(o){const t=o.scrollY??o.scrollTop;this.lastScrollTopNoThreshold!==t&&(this.runScrollNoThreshold(t<this.lastScrollTopNoThreshold,t),this.lastScrollTopNoThreshold=t),Math.abs(t-this.lastScrollTopThreshold)>(this.scrollThreshold||0)&&(this.runScrollThreshold(t<this.lastScrollTopThreshold,t),this.lastScrollTopThreshold=t)}updateScrollTop(o){this.lastScrollTopThreshold=this.lastScrollTopNoThreshold=o.scrollY??o.scrollTop}getListening(o){return o?a(o)[0]:window}getContainer(o){return o?a(o)[0]:document.body}}return h([d({attribute:"scroll-target"})],r.prototype,"scrollTarget",void 0),h([d({reflect:!0,attribute:"scroll-behavior"})],r.prototype,"scrollBehavior",void 0),h([d({type:Number,reflect:!0,attribute:"scroll-threshold"})],r.prototype,"scrollThreshold",void 0),h([p("scrollTarget")],r.prototype,"onScrollTargetChange",null),h([p("scrollBehavior")],r.prototype,"onScrollBehaviorChange",null),r};export{C as S};
